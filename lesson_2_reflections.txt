What happens when you initialize a repository? Why do you need to do it?

	Initializing a repository create a new repository and puts .git file in the directory so that you can track changes to other files in the directory.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area allows you to separate out files so that you can commit different files at different times.
	
How can you use the staging area to make sure you have one commit per logical
change?

	Only add files relevant to a single logical change to the staging area before committing.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	
	A branch would help if you trying an experimental change that you're not sure will workout.

How do the diagrams help you visualize the branch structure?

	Diagrams help show where branches differ from the master.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	
	Merging takes changes from both branches since the fork and combines them together. The diagram shows that all changes from both branches are included.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
